@page "/"

@using DenuncieAqui.Application.UseCases.ReportUseCase
@using DenuncieAqui.Application.UseCases.ImageUseCase
@using DenuncieAqui.Domain.Entities
@inject ReportUsecase _reportUseCase
@inject ImageUseCase _imageUseCase

<PageTitle>Home</PageTitle>
<div class="full-page-background"></div>
<div id="post-container">
    @if (reports != null && reports.Any())
    {
        @foreach (var report in reports)
        {
            <div class="post-item">
                <div id="post-header">
                    <img src="/Images/Slogan 5.jpeg" alt="Profile Picture">
                    <div id="user-name">@report.UserName</div>
                </div>
                <div id="post-name">
                    <p>@report.ReportName</p>
                </div>
                <div id="post-description">
                    <p>@report.ReportDescription</p>
                </div>

                @if (report.Images != null && report.Images.Any())
                {
                    @foreach (var image in report.Images)
                    {
                        <img src="@image.ImageUrl" alt="Post Image" class="post-image">
                    }
                }
                else
                {
                    <p>No images available for this report.</p>
                }

                <div id="actions">
                    <button onclick="toggleCommentSection()">Comment</button>
                    <button>Like</button>
                </div>
                <div id="comment-section" style="display:none;">
                    <textarea rows="3" placeholder="Write a comment..."></textarea>
                    <button>Submit</button>
                </div>
            </div>
        }
    }
    else
    {
        <p>No reports available.</p>
    }
</div>

<script>
    function toggleCommentSection() {
        var commentSection = document.querySelector('#comment-section');
        if (commentSection.style.display === 'none') {
            commentSection.style.display = 'block';
        } else {
            commentSection.style.display = 'none';
        }
    }
</script>

@code {
    public IEnumerable<Report> reports;
    public IEnumerable<Image> images;

    public Report Model { get; set; } = new Report();
    public Image ModelImage { get; set; } = new Image();

    protected override async Task OnInitializedAsync()
    {
        // Carrega as publicações ao inicializar a página
        reports = await _reportUseCase.GetReportsAsync();
        images = await _imageUseCase.GetImagesAsync();
    }
}


