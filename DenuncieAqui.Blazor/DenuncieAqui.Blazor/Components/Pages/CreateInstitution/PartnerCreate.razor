@page "/register-partner"

@using DenuncieAqui.Application.UseCases.InstitutionUseCase

@rendermode InteractiveServer

@inject InstitutionUseCase _institutionUseCase
@inject NavigationManager Navi

<h3 class="text-center">Cadastro de Parceiro</h3>

<div class="full-page-background"></div>
<div class="card mb-3">
    <div class="row g-0">
        <div class="col-md-4">
            <img src="/Images/parceiro.png" class="img-fluid rounded-start" alt="Profile Picture">
        </div>
        <div class="col-md-8">
            <div class="card-body">
                <EditForm Model="@Model" OnValidSubmit="@CreateInstitution" FormName="Teste">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    @if (!string.IsNullOrEmpty(ErrorMessage))
                    {
                        <div class="alert alert-danger">@ErrorMessage</div>
                    }

                    <div class="form-group">
                        <label for="CorporateName">Nome da Instituição</label>
                        <InputText id="CorporateName" class="form-control" @bind-Value="Model.CorporateName" />
                    </div>

                    <div class="form-group">
                        <label for="Document">Documento</label>
                        <InputText id="Document" class="form-control" @bind-Value="Model.Document" />
                    </div>

                    <div class="form-group">
                        <label for="Cep">Cep</label>
                        <InputText id="Cep" class="form-control" @bind-Value="Model.Cep" />
                    </div>

                    <div class="form-group">
                        <label for="Address">Rua</label>
                        <InputText id="Street" class="form-control" @bind-Value="Model.Street" />
                    </div>

                    <div class="form-group">
                        <label for="Neighborhood">Bairro</label>
                        <InputText id="Neighborhood" class="form-control" @bind-Value="Model.Neighborhood" />
                    </div>

                    <div class="form-group">
                        <label for="Uf">Bairro</label>
                        <InputText id="Uf" class="form-control" @bind-Value="Model.Uf" />
                    </div>

                    <div class="form-group">
                        <label for="Complement">Complemento</label>
                        <InputText id="Complement" class="form-control" @bind-Value="Model.Complement" />
                    </div>

                    <div class="form-group">
                        <label for="Address">Número</label>
                        <InputNumber id="NumberHome" class="form-control" @bind-Value="Model.NumHome" />
                    </div>

                    <button type="submit" class="btn btn-primary">Cadastrar</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private Institution Model { get; set; } = new Institution();
    private string ErrorMessage { get; set; } = string.Empty;

    private async Task CreateInstitution()
    {
        try
        {
            await _institutionUseCase.CreateInstitutionAsync(Model, Model.CorporateName, Model.Document, Model.Cep, Model.Street, Model.NumHome, Model.Complement!, Model.Neighborhood, Model.Uf);

            Model = new Institution();
            ErrorMessage = string.Empty;
            StateHasChanged();

            Navi.NavigateTo("/");
        }
        catch (InvalidOperationException ex)
        {
            ErrorMessage = ex.Message;
        }
        catch (Exception)
        {
            ErrorMessage = "Ocorreu um erro ao tentar cadastrar a instituição. Tente novamente.";
        }
    }
}
